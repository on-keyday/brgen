name: brgen-release
run-name: Release
on: push

concurrency:
  group: "release"
  cancel-in-progress: true

jobs:
  build-linux:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Timeline
        uses: Kesin11/actions-timeline@v1
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Set up Ninja
        uses: seanmiddleditch/gha-setup-ninja@master
      - name: Update Clang
        if: matrix.os == 'macos-latest'
        run: |
          brew update
          brew install llvm
          echo 'export PATH="/usr/local/opt/llvm/bin:$PATH"' >> /Users/runner/.bash_profile
          . /Users/runner/.bash_profile
          /usr/local/opt/llvm/bin/clang --version
          /usr/bin/clang --version
          # HACK: remove clang at /usr/bin and make a symbolic link to /usr/local/opt/llvm/bin/clang
          rm /usr/bin/clang
          rm /usr/bin/clang++
          ln -s /usr/local/opt/llvm/bin/clang /usr/bin/clang
          ln -s /usr/local/opt/llvm/bin/clang++ /usr/bin/clang++
      - name: Set up Clang
        uses: egor-tensin/setup-clang@v1.4
        if: matrix.os == 'ubuntu-latest'
        with:
          version: latest
          platform: x64
      - name: Build
        run: |
          . build.sh native Release
      - name: Pack artifacts
        run: |
          mkdir -p artifacts
          cp -a ./tool ./artifacts/tool
          cp -a ./example ./artifacts/example
          cp -a ./LICENSE ./artifacts
          cp -a ./README.md ./artifacts
          cp -a ./brgen.json ./artifacts
      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: brgen-linux
          path: ./artifacts
  build-windows:
    runs-on: windows-latest
    steps:
      - name: Timeline
        uses: Kesin11/actions-timeline@v1
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Set up Ninja
        uses: seanmiddleditch/gha-setup-ninja@master
      - name: Set up Clang
        uses: egor-tensin/setup-clang@v1.4
        with:
          version: latest
          platform: x64
      - name: Build
        shell: cmd
        run: |
          .\build.bat native Release %CD%\utils
      - name: Pack artifacts
        shell: cmd
        run: |
          mkdir artifacts
          xcopy /E /I /Y tool artifacts\tool
          xcopy /E /I /Y example artifacts\example
          copy /Y LICENSE artifacts
          copy /Y README.md artifacts
          copy /Y brgen.json artifacts
      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: brgen-windows
          path: ./artifacts
  relase:
    permissions:
      contents: write
    needs: [build-linux, build-windows]
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
      - name: Timeline
        uses: Kesin11/actions-timeline@v1
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
      - name: Download Linux artifacts
        uses: actions/download-artifact@v2
        with:
          name: brgen-linux
          path: ./artifacts/linux
      - name: Download Windows artifacts
        uses: actions/download-artifact@v2
        with:
          name: brgen-windows
          path: ./artifacts/windows
      - name: Show Current Directory
        run: |
          pwd
          ls -alR .
      - name: Make Archive
        run: |
          tar -czf artifacts/brgen-linux.tar.gz -C artifacts/linux .
          zip -r artifacts/brgen-windows.zip artifacts/windows
      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            ./artifacts/brgen-linux.tar.gz
            ./artifacts/brgen-windows.zip
          fail_on_unmatched_files: true
