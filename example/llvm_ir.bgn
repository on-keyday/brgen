
format LLVMBitCodeFile:
    magic :"BC\x0C\xED"
    input.bit_order = config.bit_order.lsb

format VBRField:
    input.bit_order = config.bit_order.lsb
    input.bit_order.mapping = config.bit_order.lsb    
    value :u3
    cont :u1

format VBR:
    fields :[]VBRField

    fn decode():
        loop:
           f :VBRField
           fields[fields.length] = f # append
           if f.cont == 0:
                break
    
    fn encode():
        loop i:= u64(i); i< fields.length; i = i+1:
            if i == fields.length-1:
                fields[i].cont = 0
            else:
                fields[i].cont = 1
        