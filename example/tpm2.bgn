# default endian is big
config.url = "https://trustedcomputinggroup.org/wp-content/uploads/TPM-2.0-1.83-Part-2-Structures.pdf"
config.url = "https://github.com/wolfSSL/wolfTPM/blob/master/src/tpm2_packet.c"

format Bytes8:
    size :u8
    data :[size]u8

format Bytes16:
    size :u16
    data :[size]u8

state SessionState:
    hasSession :bool

session_state :SessionState

format AuthCommand:
    if !session_state.hasSession:
        return
    sessionHandle :u32
    nonce :Bytes16
    sessionAttributes :u8
    hmac :Bytes16

format AuthResponse:
    nonce :Bytes16
    sessionAttributes :u8
    hmac :Bytes16

config.url = "https://github.com/wolfSSL/wolfTPM/blob/e2ef78068234f5f8230dd6e20374e70c53789e40/wolftpm/tpm2.h#L116"
enum TPMAlgorithmID:
    :u16
    TPM_ALG_ERROR = 0x0000
    TPM_ALG_RSA = 0x0001
    TPM_ALG_SHA = 0x0004
    TPM_ALG_SHA1 = TPM_ALG_SHA
    TPM_ALG_HMAC = 0x0005
    TPM_ALG_AES = 0x0006
    TPM_ALG_MGF1 = 0x0007
    TPM_ALG_KEYEDHASH = 0x0008
    TPM_ALG_XOR = 0x000A
    TPM_ALG_SHA256 = 0x000B
    TPM_ALG_SHA384 = 0x000C
    TPM_ALG_SHA512 = 0x000D
    TPM_ALG_NULL = 0x0010
    TPM_ALG_SM3_256 = 0x0012
    TPM_ALG_SM4 = 0x0013
    TPM_ALG_RSASSA = 0x0014
    TPM_ALG_RSAES = 0x0015
    TPM_ALG_RSAPSS = 0x0016
    TPM_ALG_OAEP = 0x0017
    TPM_ALG_ECDSA = 0x0018
    TPM_ALG_ECDH = 0x0019
    TPM_ALG_ECDAA = 0x001A
    TPM_ALG_SM2 = 0x001B
    TPM_ALG_ECSCHNORR = 0x001C
    TPM_ALG_ECMQV = 0x001D
    TPM_ALG_KDF1_SP800_56A = 0x0020
    TPM_ALG_KDF2 = 0x0021
    TPM_ALG_KDF1_SP800_108 = 0x0022
    TPM_ALG_ECC = 0x0023
    TPM_ALG_SYMCIPHER = 0x0025
    TPM_ALG_CAMELLIA = 0x0026
    TPM_ALG_CTR = 0x0040
    TPM_ALG_OFB = 0x0041
    TPM_ALG_CBC = 0x0042
    TPM_ALG_CFB = 0x0043
    TPM_ALG_ECB = 0x0044


format PCREntry:
    hash :u16
    select :Bytes8

format PCR:
    count :u32
    pcrs :[count]PCREntry

format TPMSymetricCrypto:
    keyBits :u16
    mode :u16

format TPMSymetricXor:
    xorr :u16

format TPMSymetric:
    alg :TPMAlgorithmID
    match alg:
        TPMAlgorithmID.TPM_ALG_XOR:
            symmetric_xor :TPMSymetricXor
        ..:
            symmetric_crypto :TPMSymetricCrypto

format TPMScheme:
    scheme :TPMAlgorithmID
    if scheme != TPMAlgorithmID.TPM_ALG_NULL:
        hashAlg :TPMAlgorithmID        

format ECCPoint:
    x: Bytes16 
    y: Bytes16

format TPMECCPoint:
    size :u16
    point :ECCPoint(input = input.subrange(size))



format SensitiveData:
    sensitiveType :u16
    authValue :Bytes16
    seedValue :Bytes16
    sensitiveData :Bytes16

format TPMSensitive:
    size :u16
    sensitive :SensitiveData(input = input.subrange(size))

format SensitiveCreate:
    userAuth :Bytes16
    sensitiveData :Bytes16

format TPMSensitiveCreate:
    size :u16
    sensitive :SensitiveCreate(input = input.subrange(size))

format PublicParamsKeyedHash:
    scheme: TPMScheme

format PublicParamSymCipher:
    algorithm :TPMAlgorithmID
    keyBits :u16
    mode :u16

format PublicParamsRSA:
    symmetric :TPMSymetric
    scheme :TPMScheme
    keyBits :u16
    exponent :u32

format PublicParamsECC:
    symmetric :TPMSymetric
    scheme :TPMScheme
    curveID :u16
    kdf :TPMScheme

format PublicParamsOther:
    symmetric :TPMSymetric
    scheme :TPMScheme


format PublicKeyArea:
    type :TPMAlgorithmID
    nameAlg :TPMAlgorithmID
    objectAttributes :u32
    authPolicy :Bytes16
    match type:
        TPMAlgorithmID.TPM_ALG_RSA:
            rsa_params :PublicParamsRSA
            rsa :Bytes16
        TPMAlgorithmID.TPM_ALG_ECC:
            ecc_params :PublicParamsECC
            ecc_point :ECCPoint
        TPMAlgorithmID.TPM_ALG_KEYEDHASH:
            keyedhash_params :PublicParamsKeyedHash
            keyedhash :Bytes16
        TPMAlgorithmID.TPM_ALG_SYMCIPHER:
            symcipher_params :PublicParamSymCipher
            sym :Bytes16
        ..:
            other_params :PublicParamsOther
    
format TPMPublicKey:
    size :u16
    public_key_area :PublicKeyArea(input = input.subrange(size))

format SignatureECDSA:
    hash :TPMAlgorithmID
    r :Bytes16
    s :Bytes16

format SignatureRSA:
    hash :TPMAlgorithmID
    sig :Bytes16

format SignatureHMAC:
    hash :TPMAlgorithmID
    match hash:
        TPMAlgorithmID.TPM_ALG_SHA1:
            hmac :[20]u8
        TPMAlgorithmID.TPM_ALG_SHA256:
            hmac :[32]u8
        TPMAlgorithmID.TPM_ALG_SHA384:
            hmac :[48]u8
        TPMAlgorithmID.TPM_ALG_SHA512:
            hmac :[64]u8


format Signature:
    alg :TPMAlgorithmID
    match alg:
        TPMAlgorithmID.TPM_ALG_ECDAA:
            ecdaa :SignatureECDSA
        TPMAlgorithmID.TPM_ALG_ECDSA:
            ecdsa :SignatureECDSA
        TPMAlgorithmID.TPM_ALG_RSASSA:
            rsassa :SignatureRSA
        TPMAlgorithmID.TPM_ALG_RSAPSS:
            rsapss :SignatureRSA
        TPMAlgorithmID.TPM_ALG_HMAC:
            hmac :SignatureHMAC

TPM_GENERATED_VALUE ::= 0xff544347

enum TPMAttestType:
    :u16
    CERTIFY
    CREATION
    QUOTE
    COMMAND_AUDIT
    SESSION_AUDIT
    TIME
    NV

format ClockInfo:
    clock :u64
    resetCount :u32
    restartCount :u32
    safe :u8

format TPMAttestHeader:
    magic :u32(TPM_GENERATED_VALUE)
    type :TPMAttestType
    qualified_signer :Bytes16
    extra_data :Bytes16
    clock_info :ClockInfo
    firmware_version :u64

format TPMAttestCerify:
    name :Bytes16
    qualifiedName :Bytes16

format TPMAttestCreation:
    name: Bytes16
    creationHash :Bytes16

format TPMAttestQuote:
    pcr :PCR
    pcrDigest :Bytes16

format TPMAttestCommandAudit:
    auditCounter :u64
    digestAlg :TPMAlgorithmID
    auditDigest :Bytes16
    commendDigest :Bytes16

format TPMAttestSessionAudit:
    exclusiveSession :u8
    sessionDigest :Bytes16

format TPMAttestTime:
    clock_info :ClockInfo
    firmware_version :u64

format TPMAttestNV:
    indexName :Bytes16
    offset :u16
    nvContents :Bytes16


format TPMAttest:
    header :TPMAttestHeader
    match header.type:
        TPMAttestType.CERTIFY:
            certify :TPMAttestCerify
        TPMAttestType.CREATION:
            creation :TPMAttestCreation
        TPMAttestType.QUOTE:
            quote: TPMAttestQuote
        TPMAttestType.COMMAND_AUDIT:
            command_audit :TPMAttestCommandAudit
        TPMAttestType.SESSION_AUDIT:
            session_audit :TPMAttestSessionAudit
        TPMAttestType.TIME:
            time :TPMAttestTime
        TPMAttestType.NV:
            nv :TPMAttestNV

enum TPMTag:
    :u16
    TPM_ST_RSP_COMMAND = 0x00C4
    TPM_ST_NULL = 0X8000
    TPM_ST_NO_SESSIONS = 0x8001
    TPM_ST_SESSIONS = 0x8002
    TPM_ST_ATTEST_NV = 0x8014
    TPM_ST_ATTEST_COMMAND_AUDIT = 0x8015
    TPM_ST_ATTEST_SESSION_AUDIT = 0x8016
    TPM_ST_ATTEST_CERTIFY = 0x8017
    TPM_ST_ATTEST_QUOTE = 0x8018
    TPM_ST_ATTEST_TIME = 0x8019
    TPM_ST_ATTEST_CREATION = 0x801A
    TPM_ST_CREATION = 0x8021
    TPM_ST_VERIFIED = 0x8022
    TPM_ST_AUTH_SECRET = 0x8023
    TPM_ST_HASHCHECK = 0x8024
    TPM_ST_AUTH_SIGNED = 0x8025
    TPM_ST_FU_MANIFEST = 0x8029

format TPMPacketHeader:
    tag :TPMTag
    commandSize :u32
    commandCode :u32

format TPMPublicNVMarshaled:
    index :u32
    nameAlg :TPMAlgorithmID
    attributes :u32
    authPolicy :Bytes16
    dataSize :u16

format ResponseProcess:
    header :TPMPacketHeader
    # TODO(on-keyday): currently 1 in wolfSSL, but are there ability to increase?
    handle :u32 
    param_size :u32
    dec_param_size :u16 # currentlty u16 in wolfSSL
    param :[param_size - 2]u8
    auth :[..]AuthResponse # remaining bytes

# standard tpm api?

format TPMStartup:
    startupType :u16

format TPMShutdown:
    shutdownType :u16

format TPMSelfTest:
    fullTest :u8 # bool

format TPMIncrementalSelfTest:
    toTest :u32
    algs :[toTest]TPMAlgorithmID

format TPMIncrementalSelfTestResponse:
    toDo :u32
    algs :[toDo]TPMAlgorithmID

format TPMGetTestResult:
    ..

format TPMGetTestResultResponse:
    outData :Bytes16
    testResult :u16

enum TPMCapability:
    :u32
    TPM_CAP_FIRST = 0x00000000
    TPM_CAP_HANDLES = 0x00000001
    TPM_CAP_COMMANDS = 0x00000002
    TPM_CAP_PP_COMMANDS = 0x00000003
    TPM_CAP_AUDIT_COMMANDS = 0x00000004
    TPM_CAP_PCRS = 0x00000005
    TPM_CAP_TPM_PROPERTIES = 0x00000006
    TPM_CAP_PCR_PROPERTIES = 0x00000007
    TPM_CAP_ECC_CURVES = 0x00000008
    TPM_CAP_VENDOR_PROPERTY = 0x00000100

format TPMGetCapability:
    capability :TPMCapability
    property :u32
    propertyCount :u32



format TPMGetCapabilityResponse:
    moreData :u8
    capability :TPMCapability
    match capability:
        TPMCapability.TPM_CAP_HANDLES:
            handleCount :u32
            handle :[handleCount]u32
        TPMCapability.TPM_CAP_TPM_PROPERTIES:
            propertyCount :u32
            property :[propertyCount]u32
        TPMCapability.TPM_CAP_VENDOR_PROPERTY:
            vender :[..]u8

format TPMGetRandom:
    bytesRequested :u16

format TPMGetRandomResponse:
    randomBytes :Bytes16

format TPM2StirRandom:
    entropy :Bytes16

format TPM2PCRRead:
    pcr :PCR

format TPM2PCRReadResponse:
    updateCounter :u32
    pcr :PCR
    pcrValueCount :u32
    pcrValues :[pcrValueCount]Bytes16

format TPM2PCRExtend:
    pcrHandle :u32
    auth :AuthCommand
    digestCount :u32
    digests :[digestCount]SignatureHMAC


format TPM2Create:
    parentHandle :u32
    auth :AuthCommand
    sensitive :TPMSensitiveCreate
    public :TPMPublicKey
    outsideInfo :Bytes16
    creationPCR :PCR

format CreationTicket:
    tag :u16
    hierarchy :u32
    digest :Bytes16

format TPM2CreateResponse:
    paramSize :u32
    outPrivate :Bytes16
    outPublic :TPMPublicKey
    creationDataSize :u16
    pcrSelect :PCR
    pcrDigest :Bytes16
    locality :u8
    parentNameAlg :TPMAlgorithmID
    parentName :Bytes16
    parentQualifiedName :Bytes16
    outsideInfo :Bytes16
    creationHash :Bytes16
    creationTicket :CreationTicket


format TPM2CreateLoaded:
    parentHandle :u32
    auth :AuthCommand
    sensitive :TPMSensitiveCreate
    public :TPMPublicKey

format TPM2CreateLoadedResponse:
    objectHandle :u32
    paramSize :u32
    outPrivate :Bytes16
    outPublic :TPMPublicKey
    name :Bytes16

format TPM2CreatePrimary: 
    primaryHandle :u32
    auth :AuthCommand
    sensitive :TPMSensitiveCreate
    public :TPMPublicKey
    outsideInfo :Bytes16
    pcr :PCR

# response is same as TPM2CreateResponse
format TPM2CreatePrimaryResponse:
    created :TPM2CreateResponse

format TPM2Load:
    parentHandle :u32
    auth :AuthCommand
    inPrivate :Bytes16
    inPublic :TPMPublicKey

format TPM2LoadResponse:
    objectHandle :u32
    paramSize :u32
    name :Bytes16

format TPM2FlushContext:
    handle :u32

format TPM2Unseal:
    itemHandle :u32
    auth :AuthCommand

format TPM2UnsealResponse:
    paramSize :u32
    outData :Bytes16

format TPM2StartAuthSession:
    tpmKey :u32
    bind :u32
    nonceCaller :Bytes16
    encryptedSalt :Bytes16
    sessionType :u8
    symmetric :TPMSymetric
    authHash :TPMAlgorithmID

format TPM2StartAuthSessionResponse:
    handle :u32
    nonceTPM :Bytes16

format TPM2PolicyRestart:
    sessionHandle :u32

format InprivateForLoadExternal:
    sensitiveType :u16
    authValue :Bytes16
    seedValue :Bytes16
    sensitiveData :Bytes16

format TPM2LoadExternal:
    parentHandle :u32
    auth :AuthCommand
    inPrivateSize :u16
    if inPrivateSize > 0:
        inPrivate :InprivateForLoadExternal(input = input.subrange(inPrivateSize))
    inPublic :TPMPublicKey

format TPM2LoadExternalResponseNoSession:
    objectHandle :u32
    name :Bytes16

format TPM2LoadExternalResponseSession:
    objectHandle :u32
    paramSize :u32
    name :Bytes16

format TPM2ReadPublic:
    objectHandle :u32

format TPM2ReadPublicResponse:
    outPublic :TPMPublicKey
    name :Bytes16
    qualifiedName :Bytes16

format TPM2ActivateCredential:
    activateHandle :u32
    keyHandle :u32
    auth :AuthCommand
    credBlob :Bytes16
    secret :Bytes16

format TPM2ActivateCredentialResponse:
    paramSize :u32
    credentialInfo :Bytes16

format TPM2MakeCredential:
    handle :u32
    credential :Bytes16
    objectName :Bytes16

format TPM2MakeCredentialResponse:
    credentialBlob :Bytes16
    secret :Bytes16

format TPM2ObjectChangeAuth:
    objectHandle :u32
    parentHandle :u32
    auth :AuthCommand
    newAuth :Bytes16

format TPM2ObjectChangeAuthResponse:
    paramSize :u32
    outPrivate :Bytes16

format TPM2Duplicate:
    objectHandle :u32
    newParentHandle :u32
    auth :AuthCommand
    encryptionKey :Bytes16
    symmetricAlg :TPMAlgorithmID
    symmetricKeyBits :u16
    symmetricMode :u16

format TPM2DuplicateResponse:
    paramSize :u32
    encryptionKeyOut :Bytes16
    duplicate :Bytes16
    outSymSeed :Bytes16

format TPM2Rewrap:
    oldParent :u32
    newParent :u32
    auth :AuthCommand
    inDuplicate :Bytes16
    name :Bytes16
    inSymSeed :Bytes16

format TPM2RewrapResponse:
    paramSize :u32
    outDuplicate :Bytes16
    outSymSeed :Bytes16

format TPM2Import:
    parentHandle :u32
    auth :AuthCommand
    encryptionKey :Bytes16
    objectPublic :TPMPublicKey
    duplicate :Bytes16
    inSymSeed :Bytes16
    symmetricAlg :TPMSymetric

format TPM2ImportResponse:
    paramSize :u32
    outPrivate :Bytes16

format TPM2RSAEncrypt:
    keyHandle :u32
    auth :AuthCommand
    message :Bytes16
    inScheme :TPMAlgorithmID
    if inScheme != TPMAlgorithmID.TPM_ALG_NULL &&
      inScheme != TPMAlgorithmID.TPM_ALG_RSAES:
        hashAlg :TPMAlgorithmID
    label :Bytes16

format TPM2RSAEncryptResponseNoSession:
    outData :Bytes16

format TPM2RSAEncryptResponseSession:
    paramSize :u32
    response :TPM2RSAEncryptResponseNoSession

format TPM2RSADecrypt:
    keyHandle :u32
    auth :AuthCommand
    cipher :Bytes16
    inScheme :TPMAlgorithmID
    if inScheme != TPMAlgorithmID.TPM_ALG_NULL &&
      inScheme != TPMAlgorithmID.TPM_ALG_RSAES:
        hashAlg :TPMAlgorithmID
    label :Bytes16


format TPM2RSADecryptResponse:
    paramSize :u32
    outData :Bytes16

format TPM2ECDHKeyGen:
    keyHandle :u32
    auth :AuthCommand

format TPM2ECDHKeyGenResponseNoSession:
    outZ :ECCPoint
    outPub :ECCPoint

format TPM2ECDHKeyGenResponseSession:
    paramSize :u32
    response :TPM2ECDHKeyGenResponseNoSession

format TPM2ZGen:
    keyHandle :u32
    auth :AuthCommand
    inPoint :ECCPoint

format TPM2ZGenResponse:
    paramSize :u32
    outPoint :ECCPoint

format TPM2ECCParameters:
    curveID :u16

format TPM2ECCParametersResponse:
    curveID :u16
    keySize :u16
    kdf :TPMScheme
    sign :TPMScheme
    p :Bytes16
    a :Bytes16
    b :Bytes16
    g :ECCPoint
    n :Bytes16
    h :Bytes16

format TPM2ZGen2Phase:
    keyA :u32
    auth :AuthCommand
    inQsB :ECCPoint
    inQeB :ECCPoint
    inScheme :TPMAlgorithmID
    counter :u16

format TPM2ZGen2PhaseResponse:
    paramSize :u32
    outZ1 :ECCPoint
    outZ2 :ECCPoint


# deprecated
format TPM2EncryptDecrypt:
    keyHandle :u32
    auth :AuthCommand
    decrypt :u8
    mode :u16
    ivIn :Bytes16
    inData :Bytes16

format TPM2EncryptDecryptResponse:
    paramSize :u32
    outData :Bytes16
    ivOut :Bytes16


format TPM2EncryptDecrypt2:
    keyHandle :u32
    auth :AuthCommand
    inData :Bytes16
    decrypt :u8
    mode :u16
    ivIn :Bytes16

format TPM2EncryptDecrypt2Response:
    paramSize :u32
    outData :Bytes16
    ivOut :Bytes16        

format TPM2Hash:
    data :Bytes16
    hashAlg :TPMAlgorithmID
    hierarchy :u32

format Validation:
    tag :u16
    hierarchy :u32
    digest :Bytes16

format TPM2HashResponseNoSession:
    outHash :Bytes16
    validation :Validation

format TPM2HashResponseSession:
    paramSize :u32
    response :TPM2HashResponseNoSession

format TPM2HMAC:
    keyHandle :u32
    auth :AuthCommand
    data :Bytes16
    hashAlg :TPMAlgorithmID

format TPM2HMACResponse:
    paramSize :u32
    outHMAC :Bytes16

format TPM2HMACStart:
    keyHandle :u32
    authCommand :AuthCommand
    auth :Bytes16
    hashAlg :TPMAlgorithmID

format TPM2HMACStartResponse:
    handle :u32
    paramSize :u32

format TPM2HashSequenceStart:
    authCommand :AuthCommand
    auth :Bytes16
    hashAlg :TPMAlgorithmID

format TPM2HashSequenceStartResponse:
    handle :u32

format TPM2SequenceUpdate:
    sequenceHandle :u32
    auth :AuthCommand
    buffer :Bytes16

format TPM2SequenceComplete:
    sequenceHandle :u32
    auth :AuthCommand
    buffer :Bytes16
    hierarchy :u32

format TPM2SequenceCompleteResponse:
    paramSize :u32
    outHash :Bytes16
    validation :Validation

format TPM2EventSequenceComplete:
    pcrHandle :u32
    sequenceHandle :u32
    auth :AuthCommand   
    buffer :Bytes16



format TPM2EventSequenceCompleteResponse:
    paramSize :u32
    resultCount :u32
    results :[resultCount]SignatureHMAC

format TPM2Certify:
    objectHandle :u32
    signHandle :u32
    auth :AuthCommand
    qualifyingData :Bytes16
    schemeAlg :TPMAlgorithmID
    hashAlg :TPMAlgorithmID

format TPM2CertifyResponse:
    paramSize :u32
    certifyInfo :Bytes16
    signature :Signature

format TPM2CertifyCreate:
    signHandle :u32
    objectHandle :u32
    auth :AuthCommand
    qualifyingData :Bytes16
    creationHash :Bytes16
    schemeAlg :TPMAlgorithmID
    hashAlg :TPMAlgorithmID
    creationTicket :CreationTicket


format TPM2CertifyCreateResponse:
    paramSize :u32
    certifyInfo :Bytes16
    signature :Signature

format TPM2Quote:
    signHandle :u32
    auth :AuthCommand
    qualifyingData :Bytes16
    schemeAlg :TPMAlgorithmID
    hashAlg :TPMAlgorithmID
    pcrSelect :PCR

format TPM2QuoteResponse:
    paramSize :u32
    quoted :Bytes16
    signature :Signature

format TPM2GetSessionAuditDigest:
    privacyAdminHandle :u32
    signHandle :u32
    auth :AuthCommand
    sessionHandle :u32
    qualifyingData :Bytes16
    schemeAlg :TPMAlgorithmID
    hashAlg :TPMAlgorithmID

format TPM2GetSessionAuditDigestResponse:
    paramSize :u32
    auditInfo :Bytes16
    signature :Signature

format TPM2GetCommandAuditDigest:
    privacyAdminHandle :u32
    signHandle :u32
    auth :AuthCommand
    qualifyingData :Bytes16
    schemeAlg :TPMAlgorithmID
    hashAlg :TPMAlgorithmID

format TPM2GetCommandAuditDigestResponse:
    paramSize :u32
    attestationData :Bytes16
    signature :Signature

format TPM2GetTime:
    privacyAdminHandle :u32
    signHandle :u32
    auth :AuthCommand
    qualifyingData :Bytes16
    schemeAlg :TPMAlgorithmID
    hashAlg :TPMAlgorithmID

format TPM2GetTimeResponse:
    paramSize :u32
    timeInfo :Bytes16
    signature :Signature

format TPM2Commit:
    signHandle :u32
    auth :AuthCommand
    p1 :ECCPoint
    s2_ :Bytes16
    y2 :ECCPoint

format TPM2CommitResponse:
    paramSize :u32
    k :ECCPoint
    L :ECCPoint 
    E :ECCPoint
    counter :u16

format TPM2ECEphemeral:
    auth :AuthCommand
    curveID :u32

format TPM2EphemeralResponseNoSession:
    q :ECCPoint
    counter :u16

format TPM2EphemeralResponseSession:
    paramSize :u32
    response :TPM2EphemeralResponseNoSession

format TPM2VerifySignature:
    keyHandle :u32
    auth :AuthCommand
    digest :Bytes16
    signature :Signature

format TPM2VerifySignatureResponseNoSession:
    paramSize :u32
    validation :Validation

