
enum DNSOpCode:
    :u4
    QUERY = 0
    IQUERY = 1
    STATUS = 2
    NOTIFY = 4
    UPDATE = 5

enum DNSReturnCode:
    :u4
    NOERROR = 0
    FORMERR = 1
    SERVFAIL = 2
    NXDOMAIN = 3
    NOTIMP = 4
    REFUSED = 5
    YXDOMAIN = 6
    YXRRSET = 7
    NXRRSET = 8
    NOTAUTH = 9
    NOTZONE = 10

format PureLabel:
    length :u8
    length <= 63
    data :[length]u8

    

format Label:
    length :u8
    if length & 0xc0 == 0xc0:
        input.backward()
        pointer :u16
    else:
        length <= 63
        data :[length]u8

format DomainName:
    labels :[]Label
    
    fn decode():
        for:
           label :Label
           labels[labels.length] = label
           if label.length == 0 || label.length & 0xc0 == 0xc0:
              break
    
    fn encode():
        for i in labels.length:
            if labels[i].length == 0 || available(labels[i].pointer):
                i == labels.length - 1
            output.put(labels[i])
    
format DomainName2:
    for:
        label :Label
        if label.length == 0 || available(label.pointer):
            break

format DNSQuestion:
    name :DomainName
    type :u16
    class :u16

format DNSResourceRecord:
    name :DomainName
    type :u16
    class :u16
    ttl :u32
    data_length :u16
    data :[data_length]u8


format DNSHeader:
    id :u16
    response :u1
    opcode :DNSOpCode
    authoritative :u1
    truncated :u1
    recursion_desired :u1
    recursion_available :u1
    z :u3
    return_code :DNSReturnCode
    query_count :u16
    answer_count :u16
    authority_count :u16
    additional_count :u16

format DNSMessage:
    header :DNSHeader
    questions :[header.query_count]DNSQuestion
    answers :[header.answer_count]DNSResourceRecord
    authorities :[header.authority_count]DNSResourceRecord
    additionals :[header.additional_count]DNSResourceRecord


