log :Syslog

format Syslog:
    header :Header

format Prival:
    val :u8
    fn decode():
        val = input.until(">",3).u8().in_range(1,191)
    
    fn encode():
        config.in_range(version,1,191)
        output.as_string(val)
    
    fn common():
        :"<"
        config.operation(input,output)
        :">"

fn digit(n :u8):
    n == "0"


fn nonzerodigit(n :char):
   '1'<=n && n<='9' 

fn nilvalue(n :char):
    n == '-'

format Version:
    version :u16
    fn decode():
        assert(nonzerodigit(input[0]))
        version = input.cond(digit,3).u16()
    
    fn encode():
        config.in_range(version,1,999)
        output.as_string(version)

format Timestamp:
    pass

format Header:
    pri :Prival
    version :Version
    :" "

